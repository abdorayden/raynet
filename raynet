#!/usr/bin/env python3

import sys

from settings.config import Banner
from settings.config import error
from settings.config import success
from settings.config import info
from settings.config import warning
from settings.config import version
from settings.parser_flags import flags

from settings.outputfile import Out_Put
#from scan import Scanner

from osi.network.ip4 import IP_Address
from osi.network.arp import arp

class Main_Error(Exception):
    pass

class Main():
    def __init__(
            self, 
            osi = None, 
            enumerating = False,
            scan = False,
            verbose = False,
            debugging = False,
            target = None,
            ports = None,
            module = None,
            protocole = None,
            output_file = None,
            interface = None
            ) -> None :
        self.osi = osi
        self.enum = enumerating
        self.scan = scan
        self.verbose = verbose
        self.debug = debugging
        self.target = target
        self.ports = ports
        self.module = module
        self.protocole = protocole
        self.outfile = output_file
        self.iface = interface
        self.result = []

    #def __get_target(self):
    #    if self.target :
    #        return self.target
    #    elif self.iface and not self.target:
    #        return self.iface
    #    else :
    #        return None
    def __generate_ports(self):
        if self.ports is not None :
            if self.ports == "all":
                return list(range(1,65536))
            elif "-" in self.ports :
                start , end = self.ports.split("-")
                if all([start , end]):
                    return list(range(int(start) , int(end) + 1))
                else :
                    raise Main_Error("port format using '-'")
            elif "," in self.ports :
                return [int(x) for x in self.ports.split(",") if x]
            elif self.ports.isdecimal() :
                return int(self.ports)
        else :
            return list(range(1,1025))
    def __main(self):
        pass


if __name__ == "__main__":
    print(Banner)
    info(msg = "Author : RayDen")
    info(msg = "Network Analyser and penetration testing tool\n")
    arg = flags()
    try :
        Main(
                osi = arg.osi , 
                enumerating = arg.enum ,
                scan = arg.scan,
                verbose = arg.verbose,
                debugging = arg.debug,
                target = arg.target ,
                ports = arg.port ,
                module = arg.module ,
                protocole = arg.protocole ,
                output_file = arg.out ,
                interface = arg.interface
        )
    except Main_Error as err:
        error(msg = err)
        exit(1)
